{"version":3,"file":"index.js","sources":["../src/core/path.ts","../src/core/types.ts","../src/core/Filterchain.ts","../src/ajax/AjaxResponseImpl.ts","../src/ajax/newAjaxRequest.ts","../src/ajax/SuperAgentAjaxAPI.ts","../src/core/utils.ts","../src/core/internal/transformFilesParameterFilter.ts","../src/core/Ajax.ts","../src/core/Endpoint.ts","../src/core/FilterChain.ts","../src/index.ts"],"sourcesContent":["const replacePrefRegExp = /^[/\\\\]+(.*)/;\nconst replaceSufRegExp = /\\/$/;\nconst replaceSepsRegExp = /[/\\\\]+/g;\n/**\n *\n * join paths with path separator '/'\n * @export\n * @param {...string[]} paths\n * @returns {string}\n */\nexport function join(...paths: string[]): string {\n    return paths\n        .filter(path => !!path)\n        .map(path => {\n            if (path.match(/^[a-z]+:\\/{2,}.*/i)) {\n                return path;\n            }\n            return path\n                .replace(replacePrefRegExp, '$1')\n                .replace(replaceSepsRegExp, '/')\n                .replace(replaceSufRegExp, '');\n        })\n        .join('/');\n}\n","import { Filter } from './FilterChain';\n\nexport type Primitive = string | boolean | number;\nexport type IDirection = 'download' | 'upload';\nexport type TypedArray =\n    | Uint8Array\n    | Uint16Array\n    | Uint32Array\n    | Uint8ClampedArray\n    | Int8Array\n    | Int16Array\n    | Int32Array\n    | Float32Array\n    | Float64Array;\nexport type StreamData = File | Blob | ArrayBuffer | TypedArray;\nexport type ResponseType = 'blob' | 'arraybuffer';\n\nexport interface IQueriesData {\n    [key: string]: Primitive;\n}\nexport interface IHeadersData {\n    [key: string]: string;\n}\n\nexport enum HttpMethod {\n    GET,\n    POST,\n    PUT,\n    DELETE,\n    PATCH,\n    HEAD,\n}\n\nexport enum FilterOpportunity {\n    REQUEST,\n    RESPONSE_SUCCESS,\n    RESPONSE_ERROR,\n}\nexport interface IFiltersConfig {\n    request?: Filter | Filter[];\n    responseSuccess?: Filter | Filter[];\n    responseError?: Filter | Filter[];\n}\n\nexport interface Progress {\n    direction: IDirection;\n    loaded: number;\n    percent?: number;\n    total?: number;\n}\n\nexport type ProgressHandler = (prog: Progress) => void;\nexport type AbortHandler = () => void;\nexport type ErrorHandler = (err: any) => void;\n\nexport interface IListeners {\n    progresss: ProgressHandler;\n    abort: AbortHandler;\n    error: ErrorHandler;\n}\nexport interface IQueryConfig {\n    name: string;\n    defaultValue?: Primitive;\n    required?: boolean;\n    validator?: Validator;\n}\n\nexport interface IHeaderConfig {\n    name: string;\n    defaultValue: string | string[];\n    required?: boolean;\n}\n\nexport interface IPathVariable {\n    name: string;\n    defaultValue?: Primitive;\n}\nexport interface IAPIConfig {\n    url?: string;\n    path?: string;\n    method: HttpMethod;\n    pathVariable?: IPathVariable[];\n    queries?: IQueryConfig[];\n    headers?: IHeaderConfig[];\n    filters?: IFiltersConfig;\n    listeners?: IListeners;\n    credential?: ICredential;\n}\nexport interface ICredential {\n    username: string;\n    password: string;\n}\nexport interface IAjaxRequestOptions {\n    method?: HttpMethod;\n    queries?: { [key: string]: Primitive };\n    headers?: { [name: string]: string };\n    filters?: IFiltersConfig;\n    credential?: ICredential;\n    formdata?: FormData | { [fild: string]: Primitive };\n    files?: StreamData | string | string[] | StreamData[] | object | object[];\n    json?: string;\n    contentType?: string;\n    responseType?: ResponseType;\n}\n\nexport type Validator = (value: any, params: object) => boolean;\n\nexport interface ResponseError extends Error {\n    status: number;\n    text: string;\n    method: string;\n    path: string;\n}\n\nexport type CallbackHandler = (err: any, res: AjaxResponse) => void;\n\nexport interface IEndpointConfigure {\n    basePath: string;\n    filters: IFiltersConfig;\n    apis: { [name: string]: IAPIConfig };\n}\nexport interface AjaxResponse {\n    accepted: boolean;\n    badRequest: boolean;\n    body: any;\n    charset: string;\n    clientError: boolean;\n    error: ResponseError;\n    files: any;\n    forbidden: boolean;\n    headers: IHeadersData;\n    info: boolean;\n    noContent: boolean;\n    notAcceptable: boolean;\n    notFound: boolean;\n    ok: boolean;\n    redirect: boolean;\n    serverError: boolean;\n    status: number;\n    statusType: number;\n    text: string;\n    type: string;\n    unauthorized: boolean;\n    getHeader(name: string): string;\n}\n\nexport interface AjaxRequest extends Promise<any> {\n    abort(): void;\n    progress(handler: ProgressHandler): void;\n    on(name: 'abort', handler: AbortHandler): void;\n    on(name: 'error', handler: ErrorHandler): void;\n    on(name: string, handler: (event: any) => void): void;\n    retry(count: number, callback: CallbackHandler): void;\n    then(\n        fullfilled?: (value: any) => any,\n        onrejected?: ((reason: any) => any)\n    ): AjaxRequest;\n    catch(onrejected?: ((reason: any) => any)): AjaxRequest;\n}\n","export type Filter = (value: any, chain: FilterChain) => any;\n\nconst TERMINAL_RESULT = new Promise(() => undefined);\n\nexport default class FilterChain {\n    public static isTerminal(value: any) {\n        return TERMINAL_RESULT === value;\n    }\n    /**\n     * @constructs FilterChain\n     * @hideconstructor\n     * @param {Filter[]} filters\n     * @param {number} index\n     */\n    constructor(private filters: Filter[], private index: number) {\n        this.filters = filters.slice(0);\n        this.index = index;\n    }\n    public next(value: any): any {\n        if (this.index >= this.filters.length) {\n            return this.finish(value);\n        }\n\n        const filter = this.filters[this.index];\n        const nextchain = this.nextchain();\n        return filter(value, nextchain);\n    }\n    public retry(value: any) {\n        return this.chainAt(0).start(value);\n    }\n    public start(value: any) {\n        return this.next(value);\n    }\n    public error(reason: Error) {\n        return Promise.reject(reason);\n    }\n    public finish(result: any) {\n        return result;\n    }\n    public terminal() {\n        return TERMINAL_RESULT;\n    }\n    private chainAt(index: number): FilterChain {\n        return new FilterChain(this.filters, index);\n    }\n    private nextchain(): FilterChain {\n        return this.chainAt(this.index + 1);\n    }\n}\n","import { Response } from 'superagent';\nimport { ResponseError, AjaxResponse, IHeadersData } from '../core/types';\n\nexport default class AjaxResponseImpl implements AjaxResponse {\n    public get accepted(): boolean {\n        return this.resp.accepted;\n    }\n    public get badRequest(): boolean {\n        return this.resp.badRequest;\n    }\n    public get body(): any {\n        return this.resp.body;\n    }\n    public get charset(): string {\n        return this.resp.charset;\n    }\n    public get clientError(): boolean {\n        return this.resp.clientError;\n    }\n    public get error(): ResponseError {\n        return this.resp.error;\n    }\n    public get files(): any {\n        return this.resp.files;\n    }\n    public get forbidden(): boolean {\n        return this.resp.forbidden;\n    }\n    public get headers(): IHeadersData {\n        return this.resp.header;\n    }\n    public get info(): boolean {\n        return this.resp.info;\n    }\n    public get noContent(): boolean {\n        return this.resp.noContent;\n    }\n    public get notAcceptable(): boolean {\n        return this.resp.notAcceptable;\n    }\n    public get notFound(): boolean {\n        return this.resp.notFound;\n    }\n    public get ok(): boolean {\n        return this.resp.ok;\n    }\n    public get unauthorized(): boolean {\n        return this.resp.unauthorized;\n    }\n    public get redirect(): boolean {\n        return this.resp.redirect;\n    }\n    public get serverError(): boolean {\n        return this.resp.serverError;\n    }\n    public get status(): number {\n        return this.resp.status;\n    }\n    public get statusType(): number {\n        return this.resp.statusType;\n    }\n    public get text(): string {\n        return this.resp.text;\n    }\n    public get type(): string {\n        return this.resp.type;\n    }\n    constructor(private resp: Response) {}\n    public getHeader(name: string): string {\n        return this.resp.get(name);\n    }\n}\n","// tslint:disable max-classes-per-file\n\nimport {\n    AjaxRequest,\n    ProgressHandler,\n    AbortHandler,\n    ErrorHandler,\n    CallbackHandler,\n} from '../core/types';\nimport { Request, Response } from 'superagent';\nimport AjaxResponseImpl from './AjaxResponseImpl';\n\nexport type EventHandler = (event: any) => void | AbortHandler | ErrorHandler;\n\nfunction extendPromise<T>(promise: Promise<T>, methods: {}): AjaxRequest {\n    const promiseThen = promise.then;\n    const promiseCatch = promise.catch;\n\n    return Object.assign(promise, methods, {\n        then(\n            fullfilled: (value: any) => any,\n            onrejected: ((reason: any) => any)\n        ): AjaxRequest {\n            const newPromise = promiseThen.call(\n                promise,\n                fullfilled,\n                onrejected\n            );\n            return extendPromise(newPromise, methods);\n        },\n        catch(onrejected?: ((reason: any) => any)): AjaxRequest {\n            const newPromise = promiseCatch.call(promise, onrejected);\n            return extendPromise(newPromise, methods);\n        },\n    }) as AjaxRequest;\n}\nexport default function newAjaxRequest(req: Request): AjaxRequest {\n    const promise = new Promise((resolve, reject) => {\n        req.then(\n            (resp: Response) => resolve(new AjaxResponseImpl(resp)),\n            reject\n        );\n    });\n    const methods = {\n        abort(): void {\n            req.abort();\n        },\n        progress(handler: ProgressHandler): void {\n            req.on('progress', handler);\n        },\n        on(name: string, handler: EventHandler): void {\n            req.on(name, handler);\n        },\n        retry(count: number, callback: CallbackHandler): void {\n            req.retry(count, (err: any, res: Response) => {\n                callback(err, new AjaxResponseImpl(res));\n            });\n        },\n    };\n    return extendPromise(promise, methods);\n}\n","import IAjaxAPI, { IRequestOptions } from '../core/AjaxAPI';\nimport * as request from 'superagent';\nimport { HttpMethod, AjaxRequest } from '../core/types';\nimport newAjaxRequest from './newAjaxRequest';\n\nexport default class SuperAgentAjaxAPI implements IAjaxAPI {\n    public request(options: IRequestOptions): AjaxRequest {\n        const req = this.createRequest(options);\n        req\n            .on('progress', e => {\n                if (options.onprogress) {\n                    options.onprogress({\n                        ...e,\n                    });\n                }\n            })\n            .on('abort', e => {\n                if (options.onabort) {\n                    options.onabort();\n                }\n            })\n            .send(options.payload);\n        return newAjaxRequest(req);\n    }\n    private createRequest(options: IRequestOptions): request.Request {\n        let req;\n        switch (options.method) {\n            case HttpMethod.GET:\n                req = request.get(options.url);\n                break;\n            case HttpMethod.DELETE:\n                req = request.del(options.url);\n                break;\n            case HttpMethod.PATCH:\n                req = request.patch(options.url);\n                break;\n            case HttpMethod.HEAD:\n                req = request.head(options.url);\n                break;\n            case HttpMethod.POST:\n                req = request.post(options.url);\n                break;\n            case HttpMethod.PUT:\n                req = request.put(options.url);\n                break;\n            default:\n                throw new Error(`Unexpected request method: ${options.method}`);\n        }\n        if (options.credential) {\n            req.auth(options.credential.username, options.credential.password);\n        }\n        if (options.queries) {\n            req.query(options.queries);\n        }\n        if (options.headers) {\n            req.set(options.headers);\n        }\n        if (options.contentType) {\n            req.set('Content-Type', options.contentType);\n        }\n        if (options.responseType) {\n            req.responseType(options.responseType);\n        }\n        return req;\n    }\n}\n","import { TypedArray } from './types';\nimport * as mimetype from 'mime-types';\n\nfunction argumentsToString() {\n    return arguments.toString();\n}\nconst ARGUMENT_TO_STRING = argumentsToString();\n\nexport const isArgument = (arg: any) =>\n    arg && arg.toString() === ARGUMENT_TO_STRING;\n\nexport function toArray<T>(...args: any[]): T[] {\n    if (this.isArgument(args[0])) {\n        return toArray.apply(null, args[0]);\n    } else {\n        return args;\n    }\n}\nexport function isTypedArray(value: any): boolean {\n    return (\n        Object.getPrototypeOf(Object.getPrototypeOf(value)).constructor.name ===\n        'TypedArray'\n    );\n}\n\nexport function mime(\n    input: string | ArrayBuffer | TypedArray\n): string | undefined {\n    if (typeof input === 'string') {\n        return mimetype.lookup(input) || undefined;\n    }\n    // TODO: detect file type of buffer\n\n    // if (input instanceof ArrayBuffer) {\n    //     input = new Uint8Array(input);\n    // } else {\n    //     input = new Uint8Array(input.buffer);\n    // }\n    // return filetype.call(null, input).mime;\n}\n","import { IAjaxRequestOptions } from '../types';\nimport FilterChain from '../Filterchain';\nimport { isTypedArray, mime } from '../utils';\n\nexport default function transformFilesParameterFilter(\n    options: IAjaxRequestOptions,\n    chain: FilterChain\n) {\n    if (!options.files || typeof FormData === 'undefined') {\n        return chain.next(options);\n    }\n    const formdata = new FormData();\n    let files = options.files;\n\n    if (!(files instanceof Array)) {\n        files = [files];\n    }\n\n    (files as any[]).forEach(file => {\n        if (file instanceof File) {\n            formdata.append((file as any).filename, file);\n        } else {\n            let data = file.data || file;\n            const filename = file.filename || file.name;\n            const partname = file.name || data.name || filename;\n\n            if (typeof data === 'string') {\n                const type =\n                    mime(filename) ||\n                    file.type ||\n                    options.contentType ||\n                    'text/plain';\n                data = new Blob([data], {\n                    type,\n                });\n            } else if (isTypedArray(data)) {\n                const type =\n                    mime(data) ||\n                    file.type ||\n                    options.contentType ||\n                    'application/octet-stream';\n                data = new Blob(data, {\n                    type,\n                });\n            } else if (!(data instanceof Blob)) {\n                const type =\n                    mime(data) ||\n                    file.type ||\n                    options.contentType ||\n                    'application/json';\n                data = new Blob([JSON.stringify(data)], {\n                    type,\n                });\n            }\n            formdata.append(partname, data, filename);\n        }\n    });\n    options.formdata = formdata;\n    options.contentType = undefined;\n    return chain.next(options);\n}\n","import {\n    IFiltersConfig,\n    HttpMethod,\n    IAPIConfig,\n    IAjaxRequestOptions,\n    AjaxRequest,\n} from './types';\nimport Endpoint from './Endpoint';\nimport FilterChain, { Filter } from './Filterchain';\nimport { IRequestOptions } from './AjaxAPI';\nimport SuperAgentAjaxAPI from '../ajax/SuperAgentAjaxAPI';\nimport transformFilesParameterFilter from './internal/transformFilesParameterFilter';\n\nexport type FiltersType = undefined | Filter | Filter[];\n\nexport interface AjaxOptions {\n    url: string;\n    filters?: IFiltersConfig;\n    endpoint: Endpoint;\n    method: HttpMethod;\n    config: IAPIConfig;\n}\n\nconst api = new SuperAgentAjaxAPI();\n\nexport default class Ajax {\n    private url: string;\n    private requestFilters: Filter[];\n    private responseSuccessFilters: Filter[];\n    private responseErrorFilters: Filter[];\n    private endpoint: Endpoint;\n    private method: HttpMethod;\n    private config: IAPIConfig;\n    constructor(options: AjaxOptions) {\n        this.url = options.url;\n        this.method = options.method;\n        if (options.filters) {\n            this.requestFilters = this.cloneFilters(options.filters.request);\n            this.responseErrorFilters = this.cloneFilters(\n                options.filters.request\n            );\n            this.responseSuccessFilters = this.cloneFilters(\n                options.filters.request\n            );\n        }\n        this.endpoint = options.endpoint;\n        this.config = options.config;\n    }\n    public clone(): Ajax {\n        return new Ajax({\n            url: this.url,\n            method: this.method,\n            filters: {\n                request: this.cloneFilters(this.requestFilters),\n                responseError: this.cloneFilters(this.responseErrorFilters),\n                responseSuccess: this.cloneFilters(this.responseSuccessFilters),\n            },\n            endpoint: this.endpoint,\n            config: this.config,\n        });\n    }\n    public request(options?: IAjaxRequestOptions): AjaxRequest {\n        if (!options) {\n            options = {};\n        }\n\n        const responseSuccessFilters = this.resolveResponseSuccessFilters(\n            options.filters ? options.filters.responseSuccess : undefined\n        );\n        const responseErrorFilters = this.resolveResponseErrorFilters(\n            options.filters ? options.filters.responseError : undefined\n        );\n\n        const doRequestFilter = (\n            requestOptions: IAjaxRequestOptions,\n            chain: FilterChain\n        ) => {\n            const resolvedOptions = this.resolveRequestOptions(requestOptions);\n            return api\n                .request({\n                    ...resolvedOptions,\n                })\n                .then(response => {\n                    const result = new FilterChain(\n                        responseSuccessFilters,\n                        0\n                    ).start(response);\n                    if (result instanceof Promise) {\n                        return result.then(null, doErrorResponse);\n                    } else {\n                        return result;\n                    }\n                }, doErrorResponse);\n\n            function doErrorResponse(reason: any) {\n                const result = new FilterChain(responseErrorFilters, 0).start(\n                    reason\n                );\n                return Promise.reject(result);\n            }\n        };\n        const requestFilters = this.resolveRequestFilters(\n            options.filters ? options.filters.request : undefined,\n            doRequestFilter\n        );\n        return new FilterChain(requestFilters, 0).start(options);\n    }\n    private resolveRequestOptions(\n        options: IAjaxRequestOptions\n    ): IRequestOptions {\n        const url: string = '';\n        const method = options.method || this.method;\n        const queries = options.queries;\n        const credential = Object.assign(\n            {},\n            this.config.credential,\n            options.credential\n        );\n        const headers = Object.assign({}, this.config.headers, options.headers);\n        return {\n            method,\n            url,\n            credential,\n            queries,\n            payload: options.formdata,\n            headers,\n            contentType: options.contentType,\n            responseType: options.responseType,\n        };\n    }\n    private resolveRequestFilters(\n        optionFilters: FiltersType,\n        doRequestFilter: Filter\n    ): Filter[] {\n        return this.concatFilters(\n            optionFilters,\n            this.requestFilters,\n            this.endpoint.requestFilters,\n            transformFilesParameterFilter,\n            doRequestFilter\n        );\n    }\n    private resolveResponseErrorFilters(optionFilters: FiltersType): Filter[] {\n        return this.concatFilters(\n            optionFilters,\n            this.responseErrorFilters,\n            this.endpoint.responseErrorFilters\n        );\n    }\n    private resolveResponseSuccessFilters(\n        optionFilters: FiltersType\n    ): Filter[] {\n        return this.concatFilters(\n            optionFilters,\n            this.responseSuccessFilters,\n            this.endpoint.responseSuccessFilters\n        );\n    }\n    private concatFilters(...filters: FiltersType[]): Filter[] {\n        return filters\n            .filter(filter => !!filter)\n            .reduce((all: FiltersType, item: FiltersType) => {\n                return (all as Filter[]).concat(item as Filter | Filter[]);\n            }, []) as Filter[];\n    }\n    private cloneFilters(filters?: Filter | Filter[]): Filter[] {\n        return Array.isArray(filters)\n            ? filters.slice(0)\n            : filters\n                ? [filters]\n                : [];\n    }\n}\n","import { Filter } from './Filterchain';\nimport { join as joinPath } from './path';\nimport {\n    IAPIConfig,\n    FilterOpportunity,\n    IEndpointConfigure,\n    HttpMethod,\n} from './types';\nimport Ajax from './Ajax';\n\ntype ComplexFiltersType = Filter | Filter[] | undefined;\n\nconst OPPORTUNITY_RESPONSE_ERROR = 'response-error';\nconst OPPORTUNITY_REQUEST = 'request';\nconst OPPORTUNITY_RESPONSE_SUCCESS = 'response-success';\n\ninterface ICachedAPIConfig extends IAPIConfig {\n    original: IAPIConfig;\n}\n\nexport default class Endpoint {\n    public static OPPORTUNITY_REQUEST: string = OPPORTUNITY_REQUEST;\n    public static OPPORTUNITY_RESPONSE_ERROR: string = OPPORTUNITY_RESPONSE_ERROR;\n    public static OPPORTUNITY_RESPONSE_SUCCESS: string = OPPORTUNITY_RESPONSE_SUCCESS;\n\n    public requestFilters: Filter[] = [];\n    public responseSuccessFilters: Filter[] = [];\n    public responseErrorFilters: Filter[] = [];\n    private apis: Map<string, ICachedAPIConfig> = new Map();\n\n    constructor(private server: string, private basePath: string) {}\n\n    public addFilter(filter: Filter, opportunity: FilterOpportunity): Endpoint {\n        switch (opportunity) {\n            case FilterOpportunity.REQUEST:\n                this.requestFilters = this.requestFilters.concat(filter);\n                break;\n            case FilterOpportunity.RESPONSE_ERROR:\n                this.responseErrorFilters = this.responseErrorFilters.concat(\n                    filter\n                );\n                break;\n            case FilterOpportunity.RESPONSE_SUCCESS:\n                this.responseSuccessFilters = this.responseSuccessFilters.concat(\n                    filter\n                );\n                break;\n            default:\n                throw new Error(`Unexpected opportunity value: ${opportunity}`);\n        }\n        return this;\n    }\n    public registerAPI(name: string, config: IAPIConfig): Endpoint {\n        if (this.apis.has(name)) {\n            throw new Error(`Duplicated api name: ${name}`);\n        }\n        const { path, method = 'GET' } = config;\n        let { url } = config;\n\n        if (!url && !path) {\n            throw new Error(\n                'API configuration error: missing \"url\" and \"path\"'\n            );\n        } else if (!url) {\n            url = joinPath(this.server, this.basePath, path || '');\n        }\n        const cachedApiConfig = {\n            ...config,\n            url,\n            method,\n            original: config,\n        } as ICachedAPIConfig;\n\n        this.apis.set(name, cachedApiConfig);\n\n        return this;\n    }\n    public configure({\n        basePath,\n        filters,\n        apis,\n    }: IEndpointConfigure): Endpoint {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (filters) {\n            this.addFilters(filters.request, FilterOpportunity.REQUEST);\n            this.addFilters(\n                filters.responseError,\n                FilterOpportunity.RESPONSE_ERROR\n            );\n            this.addFilters(\n                filters.responseSuccess,\n                FilterOpportunity.RESPONSE_SUCCESS\n            );\n        }\n        if (apis) {\n            Object.keys(apis).forEach(name =>\n                this.registerAPI(name, apis[name])\n            );\n        }\n        return this;\n    }\n    public api(name: string): any {\n        if (!this.apis.has(name)) {\n            throw new Error(`api '${name}' has not been registered!`);\n        }\n\n        const config = this.apis.get(name);\n        if (!config) {\n            return;\n        }\n        return new Ajax({\n            url: config.url || '',\n            endpoint: this,\n            method: config.method || HttpMethod.GET,\n            config: config || ({} as ICachedAPIConfig),\n            // url: config.url,\n            // filters?: config.filters,\n            // endpoint: this,\n            // method: config.method\n            // origin\n        });\n    }\n    private addFilters(filters: ComplexFiltersType, opt: FilterOpportunity) {\n        if (filters && !(filters instanceof Array)) {\n            filters = [filters] as ComplexFiltersType;\n        }\n        (filters as Filter[]).filter(filter => !!filter).forEach(filter => {\n            this.addFilter(filter, FilterOpportunity.REQUEST);\n        });\n    }\n}\n","export type Filter = (value: any, chain: FilterChain) => any;\n\nconst TERMINAL_RESULT = new Promise(() => undefined);\n\nexport default class FilterChain {\n    public static isTerminal(value: any) {\n        return TERMINAL_RESULT === value;\n    }\n    /**\n     * @constructs FilterChain\n     * @hideconstructor\n     * @param {Filter[]} filters\n     * @param {number} index\n     */\n    constructor(private filters: Filter[], private index: number) {\n        this.filters = filters.slice(0);\n        this.index = index;\n    }\n    public next(value: any): any {\n        if (this.index >= this.filters.length) {\n            return this.finish(value);\n        }\n\n        const filter = this.filters[this.index];\n        const nextchain = this.nextchain();\n        return filter(value, nextchain);\n    }\n    public retry(value: any) {\n        return this.chainAt(0).start(value);\n    }\n    public start(value: any) {\n        return this.next(value);\n    }\n    public error(reason: Error) {\n        return Promise.reject(reason);\n    }\n    public finish(result: any) {\n        return result;\n    }\n    public terminal() {\n        return TERMINAL_RESULT;\n    }\n    private chainAt(index: number): FilterChain {\n        return new FilterChain(this.filters, index);\n    }\n    private nextchain(): FilterChain {\n        return this.chainAt(this.index + 1);\n    }\n}\n","import Endpoint from './core/Endpoint';\nimport FilterChain from './core/FilterChain';\n\nexport default {\n    Endpoint,\n    FilterChain,\n};\n"],"names":["request.get","request.del","request.patch","request.head","request.post","request.put","mimetype.lookup","joinPath","tslib_1.__assign","TERMINAL_RESULT"],"mappings":"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"}